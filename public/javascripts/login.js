// Generated by CoffeeScript 1.3.3
(function() {

  $(document).ready(function() {
    var app, apps, _i, _len;
    apps = ["login", "register", "activate"];
    for (_i = 0, _len = apps.length; _i < _len; _i++) {
      app = apps[_i];
      $("#form-" + app).find("button").button();
      $(".open-" + app).click(function() {
        var close, open;
        open = $(this).attr("data-open");
        $(open).show();
        close = $(this).attr("data-close");
        return $(close).hide();
      });
    }
    /*
    	$(".open-register").click ->
    		id= $(this).attr("now")
    		$(id).hide()
    		$("#register").show()
    
    	$(".open-activate").click ->
    		id= $(this).attr("now")
    		$(id).hide()
    		$("#activate").show()
    */

    $("#form-login").submit(function() {
      $(this).find('button').button('loading');
      $.ajax({
        data: $("#form-login").serialize(),
        url: $("#form-login").attr("action"),
        type: $("#form-login").attr("method"),
        statusCode: {
          200: function(data) {
            return $(location).attr("href", "/");
          },
          400: function(xhr) {
            var data, error, _j, _len1, _ref;
            data = JSON.parse(xhr.responseText);
            $("#login").find(".code-400").show();
            _ref = data.errors;
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              error = _ref[_j];
              $("#ctrl-login-" + error.param).addClass("warning");
            }
            return $("#form-login").find('button').button("reset");
          },
          404: function(xhr) {
            var data;
            data = JSON.parse(xhr.responseText);
            return $("#form-login").find('button').button("reset");
          },
          500: function(xhr) {
            return $("#form-login").find('button').button("reset");
          }
        }
      });
      return false;
    });
    $("#form-register").submit(function() {
      $("#form-register").find("button").button("loading");
      $.ajax({
        data: $("#form-register").serialize(),
        url: $("#form-register").attr("action"),
        type: $("#form-register").attr("method"),
        statusCode: {
          200: function(data) {
            $("#register").hide();
            $(".opens").hide();
            $("#activate").show();
            $("#activate").find(".code-200").show();
            return $("#form-register").find('button').button("reset");
          },
          400: function(xhr) {
            var data, error, _j, _len1, _ref;
            data = JSON.parse(xhr.responseText);
            $("#register").find(".code-400").show();
            _ref = data.errors;
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              error = _ref[_j];
              $("#ctrl-register-" + error.param).addClass("warning");
            }
            return $("#form-register").find('button').button("reset");
          },
          410: function(xhr) {
            var data;
            data = JSON.parse(xhr.responseText);
            return $("#form-register").find('button').button("reset");
          },
          500: function(xhr) {
            return $("#form-register").find('button').button("reset");
          }
        }
      });
      return false;
    });
    return $("#form-activate").submit(function() {
      $("#form-activate").find("button").button("loading");
      $.ajax({
        data: $("#form-activate").serialize(),
        url: $("#form-activate").attr("action"),
        type: $("#form-activate").attr("method"),
        statusCode: {
          200: function(data) {
            $("#activate").hide();
            $("#login").show();
            $("#login").find(".opens").hide();
            $("#login").find(".code-200").show();
            return $("#form-activate").find('button').button("reset");
          },
          400: function(xhr) {
            var data, error, _j, _len1, _ref;
            data = JSON.parse(xhr.responseText);
            $("#activate").find(".code-400").show();
            $("#form-activate").each(function() {
              return this.reset();
            });
            _ref = data.errors;
            for (_j = 0, _len1 = _ref.length; _j < _len1; _j++) {
              error = _ref[_j];
              $("#ctrl-activate-" + error.param).addClass("warning");
            }
            return $("#form-activate").find('button').button("reset");
          },
          404: function(xhr) {
            var data;
            data = JSON.parse(xhr.responseText);
            return $("#form-activate").find('button').button("reset");
          },
          500: function(xhr) {
            return $("#form-activate").find('button').button("reset");
          }
        }
      });
      return false;
    });
  });

}).call(this);
